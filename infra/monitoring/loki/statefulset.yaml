apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: loki
  name: loki
spec:
  serviceName: loki
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
    spec:
      serviceAccountName: loki
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: loki
          image: docker.io/grafana/loki:3.5.5@sha256:31628519045e7f28692a7ae73b4a3fd293dccb425585ed5d16ceea3b5c9592e6
          args:
            - -config.file=/config/loki.yaml
            # Usefule for troubleshooting
            # - -log-config-reverse-order
          ports:
            - name: http
              containerPort: 3100
            - name: grpc
              containerPort: 9095
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: loki
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: wavecat
        resources:
          requests:
            storage: 10Gi
