apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
  namespace: media-server
spec:
  selector:
    matchLabels:
      app: lidarr
  strategy:
    type: Recreate # This makes sure only one instance is running at a time
  template:
    metadata:
      labels:
        app: lidarr
    spec:
      initContainers:
        - name: init-config
          image: dibi/envsubst:1
          command: ['sh', '-c', "envsubst < /tmp/config/config.template.xml > /config/config.xml"]
          env:
            - name: POSTGRES_HOST
              value: 'media-server-cluster'
            - name: POSTGRES_PORT
              value: '5432'
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lidarr-owner.media-server-cluster.credentials.postgresql.acid.zalan.do
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lidarr-owner.media-server-cluster.credentials.postgresql.acid.zalan.do
                  key: password
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: lidarr-apikey
                  key: apikey
          volumeMounts:
            - name: configmap-volume
              mountPath: /tmp/config
            - name: config-pv
              mountPath: /config
      containers:
        - name: lidarr
          image: lscr.io/linuxserver/lidarr:1.2.6
          env:
            - name: PUID
              value: "100"
            - name: PGID
              value: "100"
            - name: TZ
              value: America/New_York
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: lidarr-owner.media-server-cluster.credentials.postgresql.acid.zalan.do
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lidarr-owner.media-server-cluster.credentials.postgresql.acid.zalan.do
                  key: password
            - name: POSTGRES_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@media-server-cluster:5432/lidarr_main"
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config-pv
              mountPath: /config
            - name: data-pv
              mountPath: /data
      securityContext:
        fsGroup: 100
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: config-pv
          persistentVolumeClaim:
            claimName: lidarr-config
        - name: data-pv
          persistentVolumeClaim:
            claimName: media-pvc-2
        - name: configmap-volume
          configMap:
            name: lidarr-config

